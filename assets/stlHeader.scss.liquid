/* Hamburgers @description Tasty CSS-animated hamburgers @author Jonathan Suh @jonsuh @site https://jonsuh.com/hamburgers @link https://github.com/jonsuh/hamburgers */
$hamburger-padding-x           : 15px !default;
$hamburger-padding-y           : 15px !default;
$hamburger-layer-width         : 40px !default;
$hamburger-layer-height        : 4px !default;
$hamburger-layer-spacing       : 6px !default;
$hamburger-layer-color         : #000 !default;
$hamburger-layer-border-radius : 4px !default;
$hamburger-hover-opacity       : 0.7 !default;
$hamburger-active-layer-color  : $hamburger-layer-color !default;
$hamburger-active-hover-opacity: $hamburger-hover-opacity !default;
$hamburger-hover-use-filter   : false !default;
$hamburger-hover-filter       : opacity(50%) !default;
$hamburger-active-hover-filter: $hamburger-hover-filter !default;

@mixin prefix($property, $value) {
    -webkit-#{$property}: #{$value};
    -moz-#{$property}: #{$value};
    -ms-#{$property}: #{$value};
    -o-#{$property}: #{$value};
    #{$property}: #{$value};
}
.FlexWrapExtend {
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}
.FlexColumn {
    @include prefix(flex-wrap, nowrap );
    @include prefix(flex-direction, column );
}
.FlexRow {
    @include prefix(flex-wrap, nowrap );
    @include prefix(flex-direction, row );
}
.FlexSpace {
    @include prefix(align-items, center );
    @include prefix(justify-content, space-between );
    @include prefix(align-content, space-between );
}

.hdrMainContainer {
    .hdrAnnounceBarCont {
        .hdrAnnBarTxtLnk,
        .hdrAnnBarTxt {
            padding: 10px 0;
            text-align: center;
            display: block;
        }
    }
    .hdrNavBar {
        @extend .FlexWrapExtend;
        @extend .FlexRow;
        @include prefix(align-items, center );
        .navBtnBurgerCont {
            .hamburger {
                padding: $hamburger-padding-y $hamburger-padding-x;
                display: inline-block;
                cursor: pointer;
                transition-property: opacity, filter;
                transition-duration: 0.15s;
                transition-timing-function: linear;
                font: inherit;
                color: inherit;
                text-transform: none;
                background-color: transparent;
                border: 0;
                margin: 0;
                overflow: visible;
                &:hover {
                    @if $hamburger-hover-use-filter == true {
                        filter: $hamburger-hover-filter;
                    }
                    @else {
                        opacity: $hamburger-hover-opacity;
                    }
                }
                &.is-active {
                    &:hover {
                        @if $hamburger-hover-use-filter == true {
                            filter: $hamburger-active-hover-filter;
                        }
                        @else {
                            opacity: $hamburger-active-hover-opacity;
                        }
                    }
                    .hamburger-inner,
                    .hamburger-inner::before,
                    .hamburger-inner::after {
                        background-color: $hamburger-active-layer-color;
                    }
                }
                &.hamburger--vortex {
                    .hamburger-inner {
                        transition-duration: 0.2s;
                        transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);
                        &::before,
                        &::after {
                            transition-duration: 0s;
                            transition-delay: 0.1s;
                            transition-timing-function: linear;
                        }
                        &::before {
                            transition-property: top, opacity;
                        }
                
                        &::after {
                            transition-property: bottom, transform;
                        }
                    }
                    &.is-active {
                        .hamburger-inner {
                            transform: rotate(765deg);
                            transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);
                            &::before,
                            &::after {
                                transition-delay: 0s;
                            }
                            &::before {
                                top: 0;
                                opacity: 0;
                            }
                            &::after {
                                bottom: 0;
                                transform: rotate(90deg);
                            }
                        }
                    }
                }
                .hamburger-box {
                    width: $hamburger-layer-width;
                    height: $hamburger-layer-height * 3 + $hamburger-layer-spacing * 2;
                    display: inline-block;
                    position: relative;
                    .hamburger-inner {
                        display: block;
                        top: 50%;
                        margin-top: $hamburger-layer-height / -2;
                        &,
                        &::before,
                        &::after {
                            width: $hamburger-layer-width;
                            height: $hamburger-layer-height;
                            background-color: $hamburger-layer-color;
                            border-radius: $hamburger-layer-border-radius;
                            position: absolute;
                            transition-property: transform;
                            transition-duration: 0.15s;
                            transition-timing-function: ease;
                        }
                        &::before,
                        &::after {
                            content: "";
                            display: block;
                        }
                        &::before {
                            top: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;
                        }
                        &::after {
                            bottom: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;
                        }
                    }
                }
            }
        }
    }
}

  
  
  
  
